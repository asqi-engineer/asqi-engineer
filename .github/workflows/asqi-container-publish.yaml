name: Build and Push Docker Image

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false
env:
  REGISTRY: docker.io
  IMAGE_NAME: asqiengineer/asqi-engineer

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Free disk space
        run: rm -rf /opt/hostedtoolcache

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/image.tar

      - name: Smoke test
        run: |
          # Load the image and run smoke test
          docker load -i /tmp/image.tar
          echo "Running smoke test with --help command..."
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${GITHUB_SHA::7} --help

          # Verify exit code
          if [ $? -eq 0 ]; then
            echo "✅ Smoke test passed successfully!"
          else
            echo "❌ Smoke test failed - container returned non-zero exit code"
            exit 1
          fi
      
      - name: Upload Docker image as artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/image.tar
          retention-days: 1

  publish:
    if: github.event_name != 'pull_request'
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: publish-docker-registry
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Free disk space
        run: rm -rf /opt/hostedtoolcache

      - name: Download Docker image artifact
        uses: actions/download-artifact@v5
        with:
          name: docker-image
          path: /tmp

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push ASQI Docker image
        id: push
        run: |
          docker load -i /tmp/image.tar
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          fi
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            DIGEST=$(docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION} | grep digest: | cut -d' ' -f3)
            echo "digest=${DIGEST}" >> "$GITHUB_OUTPUT"
          fi

# activate when public GH repo
#      - name: Attest
#        if: startsWith(github.ref, 'refs/tags/')
#        uses: actions/attest-build-provenance@v3
#        id: attest
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true
